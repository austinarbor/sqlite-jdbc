name: Update From Upstream

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  update-from-upstream:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with: # running setup-java again overwrites the settings.xml
          distribution: 'temurin'
          java-version: '11'
          java-package: jdk
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: ${{ secrets.OSSH_USERNAME }} # env variable for username in deploy (1)
          server-password: ${{ secrets.OSSH_PASSWORD }} # env variable for token in deploy (2)
          gpg-private-key: ${{ secrets.GPG_KEY_ID }} # Value of the GPG private key to import
          gpg-passphrase: ${{ secrets.OSSH_GPG_PASSPHRASE }} # env variable for GPG private key passphrase (3)

      - name: Install yq
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew update && brew install yq

      - name: Setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Add Upstream and Update
        run: |
          git remote add upstream https://github.com/xerial/sqlite-jdbc.git
          git fetch upstream
          # overwrite our pom.xml with the upstream version
          git checkout upstream/master -- pom.xml
          git commit -m "update pom.xml from upstream"
          git rebase upstream/master

      - name: Modify pom.xml
        run: |
          # set the distribution management url to ours
          set -e
          # update project url
          yq -i -e '.project.url = "https://github.com/austinarbor/sqlite-jdbc"' pom.xml
          # update groupId
          yq -i -e '.project.groupId = "dev.aga"' pom.xml
          # update snapshot repository url
          yq -i -e '.project.distributionManagement.snapshotRepository.url = "https://s01.oss.sonatype.org/content/repositories/snapshots"' pom.xml
          # update connection
          yq -i -e '.project.scm.connection = "scm:git:git://github.com/austinarbor/sqlite-jdbc.git"' pom.xml
          # update developer connection
          yq -i -e '.project.scm.developerConnection = "scm:git:git@github.com:austinarbor/sqlite-jdbc.git"' pom.xml
          # update url
          yq -i -e '.project.scm.url = "https://github.com/austinarbor/sqlite-jdbc"' pom.xml
          # update nexus url
          yq -i -e '(.project.build.plugins.plugin.[] | select(.artifactId == "nexus-staging-maven-plugin") |  .configuration.nexusUrl) ="https://s01.oss.sonatype.org/"' pom.xml
          # disable the auto release for now
          yq -i -e '(.project.build.plugins.plugin.[] | select(.artifactId == "nexus-staging-maven-plugin") |  .configuration.autoReleaseAfterClose) ="false"' pom.xml
          git diff pom.xml

      - name: Download and Update decimal.c
        run: |
          maven_version=$(yq '.project.version' pom.xml)
          IFS=. read major minor patch build <<<"${maven_version}"
          sqlite_version=$(printf "%d.%02d.%02d" "${major}" "${minor}" "${patch}")
          echo "sqlite version: ${sqlite_version}"
          download_version=$(printf "%d%02d%02d00" "${major}" "${minor}" "${patch}")
          echo "download version: ${download_version}"
          file_name="sqlite-src-${download_version}.zip"
          download_url="https://www.sqlite.org/2023/${file_name}"
          wget "${download_url}"
          unzip "${file_name}"
          dir_name="${file_name//.zip/}"
          cp "${dir_name}/ext/misc/decimal.c" src/main/ext/decimal.c
          rm -rf "${file_name}/"
